<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: DynamicsCRM | Mavnn's blog]]></title>
  <link href="https://blog.mavnn.co.uk/blog/categories/dynamicscrm/atom.xml" rel="self"/>
  <link href="https://blog.mavnn.co.uk/"/>
  <updated>2020-03-20T20:35:10+00:00</updated>
  <id>https://blog.mavnn.co.uk/</id>
  <author>
    <name><![CDATA[mavnn]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Dynamics and Extension Methods]]></title>
    <link href="https://blog.mavnn.co.uk/dynamics-and-extension-methods/index.html"/>
    <updated>2011-05-30T00:00:00+01:00</updated>
    <id>https://blog.mavnn.co.uk/dynamics-and-extension-methods/dynamics-and-extension-methods</id>
    <content type="html"><![CDATA[<p>Filed under: I should have thought of this months ago...<p /><div>This is a particularly geeky post, mostly for the benefit of a work college (hi Caroline!) who&#39;s going to start seeing this appearing in some of our code base, but I thought it might appeal to some other people as well.</div> <p /><div>When coding against Microsoft Dynamics CRM 4.0, it&#39;s frequent that you end up having to use &#39;Dynamic Entities&#39; (mostly for custom data types you&#39;ve added to the system). You basically get access to these as a hash table with string key in your code, e.g.:</div> <p /><div>    object personName = dynamicEntity[&quot;ccc<em>personname&quot;];</div><p /><div>Great, except the compiler doesn&#39;t know the type of personName. So:</div><p /><div>    string personName = (string)dynamicEntity[&quot;ccc</em>personname&quot;];</div> <p /><div>Except that for everything apart from strings, the Dynamic SDK wraps values in a property type:</div><p /><div>    bool personNice = ((CrmBoolean)dynamicEntity[&quot;ccc_personnice&quot;]).Value;</div> <p /><div>Except that CrmBoolean can be null, but isn&#39;t Nullable. There are also other fiddly details to account for. It all gets pretty verbose, pretty annoying, and very error prone very quickly.</div><p /><div>So, without further ado: DynamicEntity extension methods that return a strongly typed result, and play nicely with the ?? operator.</div><p /><div><script src="https://gist.github.com/996859.js"></script></div></p>
]]></content>
  </entry>
  
</feed>
