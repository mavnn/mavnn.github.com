<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: testing | Mavnn's blog]]></title>
  <link href="https://blog.mavnn.co.uk/blog/categories/testing/atom.xml" rel="self"/>
  <link href="https://blog.mavnn.co.uk/"/>
  <updated>2020-03-20T20:35:10+00:00</updated>
  <id>https://blog.mavnn.co.uk/</id>
  <author>
    <name><![CDATA[mavnn]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Anyone Using FsCheck for Business Code?]]></title>
    <link href="https://blog.mavnn.co.uk/anyone-using-fscheck-for-business-code/index.html"/>
    <updated>2012-12-13T00:00:00+00:00</updated>
    <id>https://blog.mavnn.co.uk/anyone-using-fscheck-for-business-code/anyone-using-fscheck-for-business-code</id>
    <content type="html"><![CDATA[<p>Libraries like FsCheck ( <a href="http://fscheck.codeplex.com/">http://fscheck.codeplex.com/</a> ) andÂ  Pex always capture my imagination as fantastically clever and potentially useful tools. Along with things like strong type systems and code contacts they especially appeal to my long buried mathematical background.</p> <p>Unfortunately, and probably because of said mathematical background, I sometimes struggle to think of ways to use them outside of maths and science problems. If I&#39;m working on a maths library or I decide I want to write a sorting algorithm, trivially easy sanity checks of things like whether a function is cummutative or associative are immediately useful.</p> <p>If I&#39;m writing a service that polls an email address for bounced emails and out of office replies... I don&#39;t know. It feels like there should be things they can help me with: after all, over the years I&#39;ve decided the strong type system is helpful even for this side of things, so surely the QuickCheck/proof side of things should be to. But the amount of work it requires to set up the test generators for complex data types (and then trying to formalize the acceptance criteria without just writing the actual implementation!) feels so large compared to the size of the project that I can never justify the time to actually use the tools.</p> <p>So I&#39;m left wondering: am I missing something? Is there a whole new level of treating ease and vigour I&#39;m missing out on just because I don&#39;t have the imagination and experience to make good use of the tools right there in front of me? </p> <p>Or are these tools only really useful in their own narrow field? </p> <p>I suspect the middle ground; for the moment ideas are avoiding me in droves. Any good open source examples out there of these tools in use for the kind of &#39;business&#39; code that most of us spend most of our time writing? </p>
]]></content>
  </entry>
  
</feed>
